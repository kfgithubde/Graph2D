40
targetIdent
0
MProject
1
MComponent
0
2
WString
3
LIB
3
WString
5
n_2sn
1
0
0
4
MCommand
0
5
MCommand
0
6
MItem
12
graph2dd.lib
7
WString
3
LIB
8
WVList
0
9
WVList
0
-1
1
1
0
10
WPickList
6
11
MItem
3
*.c
12
WString
4
COBJ
13
WVList
28
14
MRState
15
WString
3
WCC
16
WString
21
?????No optimizations
1
0
17
MRState
18
WString
3
WCC
19
WString
24
?????Space optimizations
1
1
20
MRState
21
WString
3
WCC
22
WString
24
?????Full debugging info
1
0
23
MRState
24
WString
3
WCC
25
WString
32
?????Full info plus unused types
1
1
26
MRState
27
WString
3
WCC
28
WString
21
?????Compiler default
1
0
29
MRState
30
WString
3
WCC
31
WString
24
?????DS pegged to DGROUP
1
1
32
MRState
33
WString
3
WCC
34
WString
21
?????Compiler default
1
0
35
MRState
36
WString
3
WCC
37
WString
19
?????FS can be used
1
1
38
MRState
39
WString
3
WCC
40
WString
21
?????Compiler default
1
0
41
MRState
42
WString
3
WCC
43
WString
19
?????GS can be used
1
1
44
MRState
45
WString
3
WCC
46
WString
27
?????Average space and time
0
1
47
MRState
48
WString
3
WCC
49
WString
26
?????Fastest possible code
0
0
50
MCState
51
WString
3
WCC
52
WString
22
?????Branch prediction
0
1
53
MCState
54
WString
3
WCC
55
WString
23
?????Loop optimizations
0
1
56
MCState
57
WString
3
WCC
58
WString
19
?????Loop unrolling
0
1
59
MCState
60
WString
3
WCC
61
WString
32
?????In-line intrinsic functions
0
1
62
MCState
63
WString
3
WCC
64
WString
27
?????Instruction scheduling
0
1
65
MVState
66
WString
3
WCC
67
WString
29
?????Expand function in-line:
0
68
WString
2
20
1
69
MRState
70
WString
3
WCC
71
WString
29
?????No debugging information
0
1
72
MRState
73
WString
3
WCC
74
WString
28
?????Line number information
0
0
75
MRState
76
WString
3
WCC
77
WString
21
?????Compiler default
0
0
78
MRState
79
WString
3
WCC
80
WString
21
?????Compiler default
0
0
81
MRState
82
WString
3
WCC
83
WString
21
?????Compiler default
0
0
84
MRState
85
WString
3
WCC
86
WString
24
?????DS pegged to DGROUP
0
1
87
MRState
88
WString
3
WCC
89
WString
21
?????Compiler default
0
0
90
MRState
91
WString
3
WCC
92
WString
19
?????FS can be used
0
1
93
MRState
94
WString
3
WCC
95
WString
21
?????Compiler default
0
0
96
MRState
97
WString
3
WCC
98
WString
19
?????GS can be used
0
1
99
WVList
0
-1
1
1
0
100
MItem
17
getmaininstance.c
101
WString
4
COBJ
102
WVList
0
103
WVList
0
11
1
1
0
104
MItem
5
*.for
105
WString
6
FOROBJ
106
WVList
41
107
MCState
108
WString
4
WFOR
109
WString
24
?????Generate error file
1
0
110
MCState
111
WString
4
WFOR
112
WString
27
?????Perform stack checking
1
1
113
MCState
114
WString
4
WFOR
115
WString
33
?????Perform format type checking
1
1
116
MRState
117
WString
4
WFOR
118
WString
21
?????Compiler default
1
0
119
MRState
120
WString
4
WFOR
121
WString
29
?????Optimize for Pentium Pro
1
1
122
MRState
123
WString
4
WFOR
124
WString
21
?????Compiler default
1
0
125
MRState
126
WString
4
WFOR
127
WString
15
??2??Flat model
1
1
128
MRState
129
WString
4
WFOR
130
WString
21
?????Compiler default
1
0
131
MRState
132
WString
4
WFOR
133
WString
21
?????Compiler default
1
0
134
MCState
135
WString
4
WFOR
136
WString
33
?????Local variables on the stack
1
1
137
MCState
138
WString
4
WFOR
139
WString
24
?????Compiler can use FS
1
1
140
MRState
141
WString
4
WFOR
142
WString
21
?????Compiler default
1
0
143
MRState
144
WString
4
WFOR
145
WString
22
?????Optimize for time
1
1
146
MCState
147
WString
4
WFOR
148
WString
31
?????Base pointer optimizations
1
1
149
MCState
150
WString
4
WFOR
151
WString
22
?????Branch prediction
1
1
152
MCState
153
WString
4
WFOR
154
WString
40
?????Optimize at expense of compile-time
1
1
155
MCState
156
WString
4
WFOR
157
WString
39
?????Move register saves into flow path
1
1
158
MCState
159
WString
4
WFOR
160
WString
23
?????Loop optimizations
1
1
161
MCState
162
WString
4
WFOR
163
WString
19
?????Loop unrolling
1
1
164
MCState
165
WString
4
WFOR
166
WString
27
?????Instruction scheduling
1
1
167
MCState
168
WString
4
WFOR
169
WString
30
?????No loop overflow checking
1
1
170
MRState
171
WString
4
WFOR
172
WString
21
?????Compiler default
0
0
173
MRState
174
WString
4
WFOR
175
WString
29
?????No debugging information
0
1
176
MRState
177
WString
4
WFOR
178
WString
28
?????Line number information
0
0
179
MRState
180
WString
4
WFOR
181
WString
21
?????Compiler default
0
0
182
MRState
183
WString
4
WFOR
184
WString
29
?????Optimize for Pentium Pro
0
1
185
MRState
186
WString
4
WFOR
187
WString
21
?????Compiler default
0
0
188
MRState
189
WString
4
WFOR
190
WString
15
??2??Flat model
0
1
191
MRState
192
WString
4
WFOR
193
WString
21
?????Compiler default
0
0
194
MRState
195
WString
4
WFOR
196
WString
21
?????Compiler default
0
0
197
MCState
198
WString
4
WFOR
199
WString
24
?????Compiler can use FS
0
1
200
MRState
201
WString
4
WFOR
202
WString
21
?????Compiler default
0
0
203
MRState
204
WString
4
WFOR
205
WString
22
?????Optimize for time
0
1
206
MCState
207
WString
4
WFOR
208
WString
31
?????Base pointer optimizations
0
1
209
MCState
210
WString
4
WFOR
211
WString
22
?????Branch prediction
0
1
212
MCState
213
WString
4
WFOR
214
WString
40
?????Optimize at expense of compile-time
0
1
215
MCState
216
WString
4
WFOR
217
WString
39
?????Move register saves into flow path
0
1
218
MCState
219
WString
4
WFOR
220
WString
23
?????Loop optimizations
0
1
221
MCState
222
WString
4
WFOR
223
WString
19
?????Loop unrolling
0
1
224
MCState
225
WString
4
WFOR
226
WString
27
?????Instruction scheduling
0
1
227
MCState
228
WString
4
WFOR
229
WString
30
?????No loop overflow checking
0
1
230
WVList
0
-1
1
1
0
231
MItem
12
tcsinitt.for
232
WString
6
FOROBJ
233
WVList
0
234
WVList
0
104
1
1
0
235
MItem
5
*.lib
236
WString
3
NIL
237
WVList
0
238
WVList
0
-1
1
1
0
239
MItem
11
graph2d.lib
240
WString
3
NIL
241
WVList
0
242
WVList
0
235
1
1
0
