40
targetIdent
0
MProject
1
MComponent
0
2
WString
3
LIB
3
WString
5
n_2sn
1
0
0
4
MCommand
0
5
MCommand
0
6
MItem
12
graph2ds.lib
7
WString
3
LIB
8
WVList
0
9
WVList
0
-1
1
1
0
10
WPickList
19
11
MItem
3
*.c
12
WString
4
COBJ
13
WVList
33
14
MRState
15
WString
3
WCC
16
WString
21
?????No optimizations
1
0
17
MRState
18
WString
3
WCC
19
WString
27
?????Average space and time
1
1
20
MCState
21
WString
3
WCC
22
WString
22
?????Branch prediction
1
1
23
MCState
24
WString
3
WCC
25
WString
23
?????Loop optimizations
1
1
26
MCState
27
WString
3
WCC
28
WString
19
?????Loop unrolling
1
1
29
MCState
30
WString
3
WCC
31
WString
27
?????Instruction scheduling
1
1
32
MVState
33
WString
3
WCC
34
WString
29
?????Expand function in-line:
1
35
WString
2
20
1
36
MRState
37
WString
3
WCC
38
WString
21
?????Compiler default
1
0
39
MRState
40
WString
3
WCC
41
WString
21
?????Compiler default
1
0
42
MRState
43
WString
3
WCC
44
WString
21
?????Compiler default
1
0
45
MRState
46
WString
3
WCC
47
WString
24
?????DS pegged to DGROUP
1
1
48
MRState
49
WString
3
WCC
50
WString
21
?????Compiler default
1
0
51
MRState
52
WString
3
WCC
53
WString
19
?????FS can be used
1
1
54
MRState
55
WString
3
WCC
56
WString
21
?????Compiler default
1
0
57
MRState
58
WString
3
WCC
59
WString
19
?????GS can be used
1
1
60
MRState
61
WString
3
WCC
62
WString
20
?????Warning level 0
0
1
63
MRState
64
WString
3
WCC
65
WString
20
?????Warning level 4
0
0
66
MRState
67
WString
3
WCC
68
WString
21
?????Compiler default
0
0
69
MRState
70
WString
3
WCC
71
WString
27
?????Average space and time
0
1
72
MRState
73
WString
3
WCC
74
WString
26
?????Fastest possible code
0
0
75
MCState
76
WString
3
WCC
77
WString
22
?????Branch prediction
0
1
78
MCState
79
WString
3
WCC
80
WString
23
?????Loop optimizations
0
1
81
MCState
82
WString
3
WCC
83
WString
19
?????Loop unrolling
0
1
84
MCState
85
WString
3
WCC
86
WString
27
?????Instruction scheduling
0
1
87
MVState
88
WString
3
WCC
89
WString
29
?????Expand function in-line:
0
90
WString
2
20
1
91
MRState
92
WString
3
WCC
93
WString
29
?????No debugging information
0
1
94
MRState
95
WString
3
WCC
96
WString
28
?????Line number information
0
0
97
MRState
98
WString
3
WCC
99
WString
21
?????Compiler default
0
0
100
MRState
101
WString
3
WCC
102
WString
24
?????DS pegged to DGROUP
0
1
103
MRState
104
WString
3
WCC
105
WString
21
?????Compiler default
0
0
106
MRState
107
WString
3
WCC
108
WString
19
?????FS can be used
0
1
109
MRState
110
WString
3
WCC
111
WString
21
?????Compiler default
0
0
112
MRState
113
WString
3
WCC
114
WString
19
?????GS can be used
0
1
115
WVList
0
-1
1
1
0
116
MItem
18
createmainwindow.c
117
WString
4
COBJ
118
WVList
0
119
WVList
0
11
1
1
0
120
MItem
17
getmaininstance.c
121
WString
4
COBJ
122
WVList
0
123
WVList
0
11
1
1
0
124
MItem
10
tcsdwinc.c
125
WString
4
COBJ
126
WVList
0
127
WVList
0
11
1
1
0
128
MItem
5
*.for
129
WString
6
FOROBJ
130
WVList
43
131
MRState
132
WString
4
WFOR
133
WString
21
?????Compiler default
0
0
134
MCState
135
WString
4
WFOR
136
WString
28
?????Enable warning messages
0
0
137
MRState
138
WString
4
WFOR
139
WString
29
?????No debugging information
0
1
140
MRState
141
WString
4
WFOR
142
WString
28
?????Line number information
0
0
143
MRState
144
WString
4
WFOR
145
WString
21
?????Compiler default
0
0
146
MRState
147
WString
4
WFOR
148
WString
29
?????Optimize for Pentium Pro
0
1
149
MRState
150
WString
4
WFOR
151
WString
21
?????Compiler default
0
0
152
MRState
153
WString
4
WFOR
154
WString
15
??2??Flat model
0
1
155
MRState
156
WString
4
WFOR
157
WString
21
?????Compiler default
0
0
158
MRState
159
WString
4
WFOR
160
WString
21
?????Compiler default
0
0
161
MCState
162
WString
4
WFOR
163
WString
24
?????Compiler can use FS
0
1
164
MRState
165
WString
4
WFOR
166
WString
21
?????Compiler default
0
0
167
MRState
168
WString
4
WFOR
169
WString
22
?????Optimize for time
0
1
170
MCState
171
WString
4
WFOR
172
WString
31
?????Base pointer optimizations
0
1
173
MCState
174
WString
4
WFOR
175
WString
22
?????Branch prediction
0
1
176
MCState
177
WString
4
WFOR
178
WString
40
?????Optimize at expense of compile-time
0
1
179
MCState
180
WString
4
WFOR
181
WString
39
?????Move register saves into flow path
0
1
182
MCState
183
WString
4
WFOR
184
WString
23
?????Loop optimizations
0
1
185
MCState
186
WString
4
WFOR
187
WString
19
?????Loop unrolling
0
1
188
MCState
189
WString
4
WFOR
190
WString
23
?????Math optimizations
0
1
191
MCState
192
WString
4
WFOR
193
WString
27
?????Instruction scheduling
0
1
194
MCState
195
WString
4
WFOR
196
WString
30
?????No loop overflow checking
0
1
197
MRState
198
WString
4
WFOR
199
WString
21
?????Compiler default
1
0
200
MCState
201
WString
4
WFOR
202
WString
27
?????Perform stack checking
1
1
203
MCState
204
WString
4
WFOR
205
WString
33
?????Perform format type checking
1
1
206
MRState
207
WString
4
WFOR
208
WString
21
?????Compiler default
1
0
209
MRState
210
WString
4
WFOR
211
WString
29
?????Optimize for Pentium Pro
1
1
212
MRState
213
WString
4
WFOR
214
WString
21
?????Compiler default
1
0
215
MRState
216
WString
4
WFOR
217
WString
15
??2??Flat model
1
1
218
MRState
219
WString
4
WFOR
220
WString
21
?????Compiler default
1
0
221
MRState
222
WString
4
WFOR
223
WString
21
?????Compiler default
1
0
224
MCState
225
WString
4
WFOR
226
WString
24
?????Compiler can use FS
1
1
227
MRState
228
WString
4
WFOR
229
WString
21
?????Compiler default
1
0
230
MRState
231
WString
4
WFOR
232
WString
22
?????Optimize for time
1
1
233
MCState
234
WString
4
WFOR
235
WString
31
?????Base pointer optimizations
1
1
236
MCState
237
WString
4
WFOR
238
WString
22
?????Branch prediction
1
1
239
MCState
240
WString
4
WFOR
241
WString
40
?????Optimize at expense of compile-time
1
1
242
MCState
243
WString
4
WFOR
244
WString
39
?????Move register saves into flow path
1
1
245
MCState
246
WString
4
WFOR
247
WString
23
?????Loop optimizations
1
1
248
MCState
249
WString
4
WFOR
250
WString
19
?????Loop unrolling
1
1
251
MCState
252
WString
4
WFOR
253
WString
23
?????Math optimizations
1
1
254
MCState
255
WString
4
WFOR
256
WString
27
?????Instruction scheduling
1
1
257
MCState
258
WString
4
WFOR
259
WString
30
?????No loop overflow checking
1
1
260
WVList
0
-1
1
1
0
261
MItem
7
AG2.FOR
262
WString
6
FOROBJ
263
WVList
0
264
WVList
0
128
1
1
0
265
MItem
15
AG2Holerith.for
266
WString
6
FOROBJ
267
WVList
0
268
WVList
0
128
1
1
0
269
MItem
12
AG2uline.FOR
270
WString
6
FOROBJ
271
WVList
0
272
WVList
0
128
1
1
0
273
MItem
12
AG2umnmx.FOR
274
WString
6
FOROBJ
275
WVList
0
276
WVList
0
128
1
1
0
277
MItem
13
AG2upoint.FOR
278
WString
6
FOROBJ
279
WVList
0
280
WVList
0
128
1
1
0
281
MItem
12
AG2users.FOR
282
WString
6
FOROBJ
283
WVList
0
284
WVList
0
128
1
1
0
285
MItem
13
AG2useset.FOR
286
WString
6
FOROBJ
287
WVList
0
288
WVList
0
128
1
1
0
289
MItem
14
AG2usesetC.FOR
290
WString
6
FOROBJ
291
WVList
0
292
WVList
0
128
1
1
0
293
MItem
16
AG2UsrSoftek.FOR
294
WString
6
FOROBJ
295
WVList
0
296
WVList
0
128
1
1
0
297
MItem
10
GetHDC.for
298
WString
6
FOROBJ
299
WVList
0
300
WVList
0
128
1
1
0
301
MItem
11
strings.for
302
WString
6
FOROBJ
303
WVList
0
304
WVList
0
128
1
1
0
305
MItem
7
tcs.for
306
WString
6
FOROBJ
307
WVList
0
308
WVList
0
128
1
1
0
309
MItem
12
tcsdrwin.for
310
WString
6
FOROBJ
311
WVList
0
312
WVList
0
128
1
1
0
313
MItem
12
tcsinitt.for
314
WString
6
FOROBJ
315
WVList
0
316
WVList
0
128
1
1
0
